name: Terraform infra
on:
 push:
    branches: [main]
    paths: ['terraform/bucket/**']
  pull_request:
    branches: [main]
    paths: ['terraform/bucket/**']
  workflow_dispatch:
    inputs:
      apply:
        description: 'Type "true" to apply changes'
        required: true
        default: 'false'

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_token:     ${{ secrets.YC_TOKEN }}
      TF_VAR_cloud_id:  ${{ secrets.YC_CLOUD_ID }}
      TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
      TF_VAR_ssh_public: ${{ secrets.SSH_PUBLIC }}
jobs:
 terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_yc_token:     ${{ secrets.YC_TOKEN }}       
      TF_VAR_yc_cloud_id:  ${{ secrets.YC_CLOUD_ID }}    
      TF_VAR_yc_folder_id: ${{ secrets.YC_FOLDER_ID }}   
      TF_VAR_s3_access_key: ${{ secrets.S3_ACCESS_KEY }} 
      TF_VAR_s3_secret_key: ${{ secrets.S3_SECRET_KEY }} 

    steps:
    - uses: actions/checkout@v4

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - uses: hashicorp/setup-terraform@v3
      with: 
        terraform_version: "1.8.0"

    - name: Terraform Init
      run: terraform -chdir=terraform/bucket init

    - name: Terraform Format
      run: terraform -chdir=terraform/bucket fmt -check

    - name: Terraform Validate
      run: terraform -chdir=terraform/bucket validate

    - name: Terraform Plan
      run: terraform -chdir=terraform/bucket plan -input=false -out=tfplan

    - uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: terraform/bucket/tfplan

    - name: Terraform Apply
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.apply == 'true'
      run: terraform -chdir=terraform/bucket apply -input=false tfplan
